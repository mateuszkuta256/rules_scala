module(name = "io_bazel_rules_scala")

SCALA_VERSION = "2.12.18"

bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "rules_go", version = "0.38.1")
bazel_dep(name = "gazelle", version = "0.30.0")
bazel_dep(name = "rules_cc", version = "0.0.6")
bazel_dep(name = "rules_java", version = "5.5.0")
bazel_dep(name = "rules_python", version = "0.28.0")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "protobuf", version = "21.7", repo_name = "com_google_protobuf")

scala_config_dep = use_extension("//:extensions/scala_config_ext.bzl", "scala_config_dep")
use_repo(scala_config_dep, "io_bazel_rules_scala_config")   #TODO somehow pass SCALA_VERSION here

def scala_deps():
    scala_deps = use_extension("//:extensions/scala_ext.bzl", "scala_deps")
    use_repo(scala_deps, "scala_compiler_source")
    use_repo(scala_deps, "io_bazel_rules_scala_scala_library")
    use_repo(scala_deps, "io_bazel_rules_scala_scala_compiler")
    use_repo(scala_deps, "io_bazel_rules_scala_scala_xml")
    use_repo(scala_deps, "io_bazel_rules_scala_scala_parser_combinators")
    use_repo(scala_deps, "io_bazel_rules_scala_org_openjdk_jmh_jmh_core")
    use_repo(scala_deps, "io_bazel_rules_scala_org_openjdk_jmh_jmh_generator_asm")
    use_repo(scala_deps, "io_bazel_rules_scala_org_openjdk_jmh_jmh_generator_reflection")
    use_repo(scala_deps, "io_bazel_rules_scala_org_ows2_asm_asm")
    use_repo(scala_deps, "io_bazel_rules_scala_net_sf_jopt_simple_jopt_simple")
    use_repo(scala_deps, "io_bazel_rules_scala_org_apache_commons_commons_math3")
    use_repo(scala_deps, "scala_proto_rules_scalapb_plugin")
    use_repo(scala_deps, "scala_proto_rules_protoc_bridge")
    use_repo(scala_deps, "scala_proto_rules_scalapb_runtime")
    use_repo(scala_deps, "scala_proto_rules_scalapb_runtime_grpc")
    use_repo(scala_deps, "scala_proto_rules_scalapb_lenses")
    use_repo(scala_deps, "scala_proto_rules_scalapb_fastparse")
    use_repo(scala_deps, "scala_proto_rules_grpc_core")
    use_repo(scala_deps, "scala_proto_rules_grpc_api")
    use_repo(scala_deps, "scala_proto_rules_grpc_stub")
    use_repo(scala_deps, "scala_proto_rules_grpc_protobuf")
    use_repo(scala_deps, "scala_proto_rules_grpc_netty")
    use_repo(scala_deps, "scala_proto_rules_grpc_context")
    use_repo(scala_deps, "scala_proto_rules_perfmark_api")
    use_repo(scala_deps, "scala_proto_rules_guava")
    use_repo(scala_deps, "scala_proto_rules_google_instrumentation")
    use_repo(scala_deps, "scala_proto_rules_netty_codec")
    use_repo(scala_deps, "scala_proto_rules_netty_codec_http")
    use_repo(scala_deps, "scala_proto_rules_netty_codec_socks")
    use_repo(scala_deps, "scala_proto_rules_netty_codec_http2")
    use_repo(scala_deps, "scala_proto_rules_netty_handler")
    use_repo(scala_deps, "scala_proto_rules_netty_buffer")
    use_repo(scala_deps, "scala_proto_rules_netty_transport")
    use_repo(scala_deps, "scala_proto_rules_netty_resolver")
    use_repo(scala_deps, "scala_proto_rules_netty_common")
    use_repo(scala_deps, "scala_proto_rules_netty_handler_proxy")
    use_repo(scala_deps, "scala_proto_rules_opencensus_api")
    use_repo(scala_deps, "scala_proto_rules_opencensus_impl")
    use_repo(scala_deps, "scala_proto_rules_disruptor")
    use_repo(scala_deps, "scala_proto_rules_opencensus_impl_core")
    use_repo(scala_deps, "scala_proto_rules_opencensus_contrib_grpc_metrics")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_compatible")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_core")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_featurespec")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_flatspec")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_freespec")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_funsuite")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_funspec")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_matchers_core")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_shouldmatchers")
    use_repo(scala_deps, "io_bazel_rules_scala_scalatest_mustmatchers")
    use_repo(scala_deps, "io_bazel_rules_scala_scalactic")
    use_repo(scala_deps, "io_bazel_rules_scala_org_specs2_specs2_common")
    use_repo(scala_deps, "io_bazel_rules_scala_org_specs2_specs2_core")
    use_repo(scala_deps, "io_bazel_rules_scala_org_specs2_specs2_fp")
    use_repo(scala_deps, "io_bazel_rules_scala_org_specs2_specs2_matcher")
    use_repo(scala_deps, "io_bazel_rules_scala_junit_junit")
    use_repo(scala_deps, "io_bazel_rules_scala_org_hamcrest_hamcrest_core")
    use_repo(scala_deps, "io_bazel_rules_scala_org_specs2_specs2_junit")
    use_repo(scala_deps, "org_apache_commons_commons_lang_3_5_without_file")
    use_repo(scala_deps, "io_bazel")
    use_repo(scala_deps, "google_java_format")
    use_repo(scala_deps, "com_github_google_yapf")
    use_repo(scala_deps, "remote_jdk8_macos")
    use_repo(scala_deps, "remote_jdk8_windows")
    use_repo(scala_deps, "remote_jdk8_linux")
    if SCALA_VERSION.startswith("2"):
        scala_2_deps()
    if SCALA_VERSION.startswith("3"):
        scala_3_deps()

def scala_2_deps():
    scala_2_deps = use_extension("//:extensions/scala_2_ext.bzl", "scala_2_deps")
    use_repo(scala_2_deps, "org_scalameta_semanticdb_scalac")
    use_repo(scala_2_deps, "io_bazel_rules_scala_scala_reflect")

def scala_3_deps():
    scala_3_deps = use_extension("//:extensions/scala_3_ext.bzl", "scala_3_deps")
    use_repo(scala_3_deps, "io_bazel_rules_scala_scala_interfaces")
    use_repo(scala_3_deps, "io_bazel_rules_scala_scala_tasty_core")
    use_repo(scala_3_deps, "io_bazel_rules_scala_scala_asm")
    use_repo(scala_3_deps, "io_bazel_rules_scala_scala_library_2")

scala_deps()

register_toolchains("@io_bazel_rules_scala//jmh:jmh_toolchain")
register_toolchains("@io_bazel_rules_scala//scala_proto:default_deps_toolchain")
register_toolchains("//testing:testing_toolchain")
register_toolchains("@io_bazel_rules_scala//scala:unused_dependency_checker_error_toolchain")
register_toolchains("@io_bazel_rules_scala//test/proto:scalapb_toolchain")
